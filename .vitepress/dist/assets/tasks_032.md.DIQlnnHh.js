import{_ as t,c as e,o as a,a2 as s}from"./chunks/framework.C94oF1kp.js";const m=JSON.parse('{"title":"Хеш-таблицы во внешней памяти.","description":"","frontmatter":{},"headers":[],"relativePath":"tasks/032.md","filePath":"tasks/032.md"}'),o={name:"tasks/032.md"},r=s('<h1 id="хеш-таблицы-во-внешнеи-памяти" tabindex="-1">Хеш-таблицы во внешней памяти. <a class="header-anchor" href="#хеш-таблицы-во-внешнеи-памяти" aria-label="Permalink to &quot;Хеш-таблицы во внешней памяти.&quot;">​</a></h1><h2 id="определение" tabindex="-1">Определение <a class="header-anchor" href="#определение" aria-label="Permalink to &quot;Определение&quot;">​</a></h2><p><strong>Хеш-таблицы во внешней памяти</strong> - это специальный тип хеш-таблиц, предназначенных для работы с данными, хранящимися на диске или других внешних носителях. Они используются для эффективного хранения и поиска больших объемов данных, которые не могут полностью поместиться в оперативной памяти компьютера</p><p><strong>Весь файл разбит на три зоны</strong>.</p><ul><li>Первая зона — фиксированного размера, заголовок. В нём можно хранить такую информацию, как размер хеш-таблицы HASHSIZE, начало и размер второй зоны, количество записей в таблице, смещение в файле, по которому можно записывать новые данные, и проч.</li><li>Вторая зона содержит точки входа — смещение в файле, по которому начинается поиск требуемой записи. В этой зоне находится HASHSIZE входов.</li><li>Третья зона содержит сами записи. Каждая запись содержит три поля — ключ, данные и точку продолжения поиска при коллизии.</li></ul><p><img src="https://lh7-us.googleusercontent.com/docsz/AD_4nXdrvvBwSEk8wz_KB2UwgE0UasPQ0caL03CYeEeVbYGbDkumFkaLFYDEP2eAFqj1KNESE_8fqZN3aP-JeVrDgEUvbdxagKTjQpy7NxJwHjE0MSiGXeHj-FIzVSFSsmYncOye6wpdx_D5FT-SPnPkMwH7WME?key=9gziK4gT-jwK64_BpOeehQ" alt=""><img src="https://lh7-us.googleusercontent.com/docsz/AD_4nXeJtNkJzPr-MCWTocQUhJYO1DKsw0MuvTLPX7ycH4kyir35sOHennQPR8IKsNDHF_zshJBbhGHmz8amZuGX7OfSjS-mlBrjmeAkHRHTtj9CXRfFxJFAqSv3UvIwFuvF3sFvVGj0r3ff5t_lzb5BsVIGHOj-?key=9gziK4gT-jwK64_BpOeehQ" alt=""></p><h2 id="особенности" tabindex="-1">Особенности <a class="header-anchor" href="#особенности" aria-label="Permalink to &quot;Особенности&quot;">​</a></h2><ul><li><strong>Внешняя память:</strong> Данные хранятся на диске или других внешних устройствах вместо оперативной памяти.</li><li><strong>Блочное чтение и запись:</strong> Вместо того, чтобы читать и записывать данные по одной записи, данные читаются и записываются блоками, что уменьшает количество операций ввода-вывода и повышает производительность.</li><li><strong>Использование индекса:</strong> Обычно хеш-таблицы во внешней памяти используют индексную структуру для быстрого доступа к блокам данных на диске.</li><li><strong>Алгоритмы разрешения коллизий:</strong> Используются алгоритмы разрешения коллизий, такие как метод цепочек или открытая адресация, но они адаптированы для работы с внешней памятью.</li></ul><h2 id="преимущества" tabindex="-1">Преимущества <a class="header-anchor" href="#преимущества" aria-label="Permalink to &quot;Преимущества&quot;">​</a></h2><ul><li><strong>Эффективность работы с большими объемами данных:</strong> Хеш-таблицы во внешней памяти позволяют эффективно хранить и обрабатывать данные, которые не помещаются в оперативной памяти.</li><li><strong>Ускоренные операции ввода-вывода:</strong> Использование блочного чтения и записи помогает уменьшить количество операций ввода-вывода, что увеличивает производительность работы с данными на диске.</li></ul>',10),l=[r];function n(i,c,_,h,d,g){return a(),e("div",null,l)}const p=t(o,[["render",n]]);export{m as __pageData,p as default};
